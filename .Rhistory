misspelled_name
misspelled_name
y2016 <- df[-c(216), ]
df[grep(NA,df$Name), ]
summary(df)
sum(is.na(df[2]))
View(df)
setwd("~/Dropbox/Senkungu Fam/Education/SMU/Courses/MSDS 6306 Doing Data Science/GitHub Repo/smu-msds-homework/6306-homework/unit05")
y2015 <- read.delim("yob2015.txt", header = FALSE, sep = ",")
names(y2015) <- c("Name", "Sex", "Frequency")
View(y2015)
View(y2015)
tail(y2015)
tail(y2015, 10)
SMU = c(34, 1200, 23, 50, 60, 50, 0, 0, 30, 89, 0, 300, 400, 20, 10, 0)
Seattle = c(20, 10, 5, 0, 30, 50, 0, 100, 110, 0, 40, 10, 3, 0)
DV <- c(SMU, Seattle)
IV <- factor(rep(c("A", "B"), c(length(SMU), length(Seattle))))
IV
library(lmPerm)
mod2 <- aovp(DV ~ IV)
mod2
summary(mod2)
mod3 <- aovp(SMU ~ Seattle)
summary(mod2)
library(exactRankTests) #library to run the permutation tests
library(coin)
perm.test(DV ~ IV, paired=FALSE, alternative="two.sided", conf.level=0.95)$p.value
L <- c(45, 53.1, 40.8, 75.5, 46.7, 85.4, 85.6, 18.2, 43.2)
U <- c(23.6, 13.3, 34.2, 18.1, 56.1, -8.1, -20.1)
View(y2015)
L <- c(45, 53.1, 40.8, 75.5, 46.7, 85.4, 85.6, 18.2, 43.2)
U <- c(23.6, 13.3, 34.2, 18.1, 56.1, -8.1, -20.1)
wilcox.test(L,U correct = FALSE)
wilcox.test(L,U, correct = FALSE)
fires <- wilcox.test(L,U, correct = FALSE)
summary(fires)
str(fires)
fires
fires <- wilcox.test(L,U, alternative = c(correct = TRUE, conf.int = TRUE, conf.level = .95))
fires
fires <- wilcox.test(L,U, correct = TRUE, conf.int = TRUE, conf.level = .95)
fires
fires <- wilcox.test(L,U, correct = TRUE, conf.int = TRUE, conf.level = .95, "less")
fires
fires <- wilcox.test(L,U, correct = TRUE, conf.int = TRUE, conf.level = .95, "greater")
fires
fires <- wilcox.test(L,U, correct = TRUE, conf.int = TRUE, conf.level = .95, "two sided")
fires
fires <- wilcox.test(L,U, correct = TRUE, conf.int = TRUE, conf.level = .95, "two.sided")
fires
knitr::opts_chunk$set(echo = TRUE)
breweries <- read.csv("https://github.com/tikisen/6306-case-study-1/blob/master/Breweries.csv")
beers <- read.csv("https://github.com/tikisen/6306-case-study-1/blob/master/Beers.csv")
breweries <- read.csv("https://github.com/tikisen/6306-case-study-1/blob/master/Breweries.csv")
beers <- read.csv("https://github.com/tikisen/6306-case-study-1/blob/master/Beers.csv")
?read.csv
breweries <- read.csv("https://github.com/tikisen/6306-case-study-1/blob/master/Breweries.csv", header = TRUE)
breweries <- read.csv("https://github.com/tikisen/6306-case-study-1/blob/master/Breweries.csv", row.names = NULL, stringsAsFactors = FALSE, header = TRUE)
breweries <- read.csv("https://github.com/tikisen/6306-case-study-1/blob/master/Breweries.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE, header = TRUE)
breweries <- read.csv("https://github.com/tikisen/6306-case-study-1/blob/master/Breweries.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE, header = TRUE)
View(breweries)
View(breweries)
breweries <- read.csv("https://github.com/tikisen/6306-case-study-1/blob/master/Breweries.csv", sep = ",", row.names = NULL, stringsAsFactors = FALSE, header = TRUE)
breweries <- read.csv("https://github.com/tikisen/6306-case-study-1/blob/master/Breweries.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE, header = TRUE)
breweries <- read.csv("https://github.com/tikisen/6306-case-study-1/blob/master/Breweries.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE, header = TRUE)
View(breweries)
View(breweries)
View(breweries)
breweries <- read.csv("https://github.com/tikisen/6306-case-study-1/blob/master/Breweries.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE, header = TRUE)
breweries <- read.csv("https://github.com/tikisen/6306-case-study-1/blob/master/Breweries.csv", quote = "", stringsAsFactors = FALSE, header = TRUE)
breweries <- read.csv("https://github.com/tikisen/6306-case-study-1/blob/master/Breweries.csv", quote = "", stringsAsFactors = FALSE, header = TRUE)
breweries <- read.csv("https://raw.githubusercontent.com/tikisen/6306-case-study-1/master/Breweries.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE, header = TRUE)
beers <- read.csv("https://raw.githubusercontent.com/tikisen/6306-case-study-1/master/Beers.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE, header = TRUE)
summary(breweries)
str(breweries)
names(breweries)[2]<-paste("Brewery_Name")
str(breweries)
str(beers)
names(beers)[1]<-paste("Beer_Name")
names(beers)[1]<-paste("Beer_Name")
str(beers)
summary(breweries)
head(subset(mtcars, select = 'State'))
library(mtcars)
?mtcars
head(subset(breweries, select = 'State'))
install.packages('plyr')
install.packages("plyr")
knitr::opts_chunk$set(echo = TRUE)
library("plyr")
View(breweries)
count(breweries, "Brewery_Name")
count(breweries, "State")
?count
count(breweries, "State", !is.na)
!is.na(count(breweries, "State"))
count(breweries, "State")
beer_merge <- merge(beers,breweries,by=c("Brewery_id"))
#change brewery ID name to match in both files
names(breweries)[1]<-paste("Brewery_id")
beer_merge <- merge(beers,breweries,by=c("Brewery_id"))
head(beer_merge)
head(beer_merge, 30)
head(beer_merge, 35-40)
head(beer_merge, 35)
is.na(beer_merge$IBU)
count(is.na(beer_merge$IBU))
sum(is.na(beer_merge$IBU))
count(is.na(beer_merge$IBU))
sapply(sum(is.na(beer_merge)))
sapply(beer_merge, sum(is.na(x)))
sum(is.na(beer_merge$IBU))
?tapply
?colnames
str(beer_merge)
apply(beer_merge[,1:10],1,function(x) sum(is.na(x)))
apply(beer_merge[,1:10],1,function(x) sapply(beer_merge, sum(is.na(x))))
total_nas <- sum(is.na(x))
sapply(beer_merge, sum(is.na(beer_merge$IBU)))
?tapply
?vapply
View(beer_merge)
lapply(beer_merge, is.na)
lapply(beer_merge, sum(is.na))
lapply(beer_merge, sum(nas))
lapply(beer_merge, sum(nas))
nas <- is.na(beer_merge)
lapply(beer_merge, sum(nas))
nas <- is.na(beer_merge)
lapply(beer_merge, sum(nas))
lapply(beer_merge, sum,nas)
lapply(beer_merge, sum)
lapply(beer_merge, sum)
median(beer_merge$ABV)
?median
median(beer_merge$ABV, na.rm = TRUE)
median(beer_merge$IBU, na.rm = TRUE)
?which
which.max(beer_merge$ABV)
#sum(is.na(beer_merge$IBU))
#sapply(beer_merge, sum(is.na(beer_merge$IBU)))
#nas <- is.na(beer_merge)
#lapply(beer_merge, sum)
sapply(beer_merge, function(x) sum(is.na(x)))
beer_merge$State[which.max(beer_merge$ABV)]
beer_merge$State[which.max(beer_merge$IBU)]
summary(beer_merge$ABV)
aggregate(beer_merge$ABV, by beer_merge$State)
aggregate(ABV, beer_merge by State)
aggregate(ABV, beer_merge, by State)
aggregate(ABV~State, beer_merge, FUN = median)
median_IBU <- aggregate(IBU~State, beer_merge, FUN = median)
median_ABV <- aggregate(ABV~State, beer_merge, FUN = median)
plot median_ABV
plot(median_ABV)
?plot
View(median_ABV)
barplot(median_ABV$ABV)
barplot(median_ABV$ABV, space = .25)
barplot(median_ABV$ABV, space = .25, xlab = "States", ylab = "Alcohol by Volume", main = "Median Alcohol by State")
barplot(median_ABV$ABV, space = .25, xlab = "States", ylab = "Alcohol by Volume", main = "Median Alcohol by State", names.arg = median_ABV$State)
barplot(median_ABV$ABV, space = .25, xlab = "States", ylab = "Alcohol by Volume", main = "Median ABV by State", names.arg = median_ABV$State)
knitr::opts_chunk$set(echo = TRUE)
str(beer_merge)
summary(beer_merge$Brewery_id)
str(beer_merge$Brewery_id)
str(beer_merge)
dim(breweries)
summary(beer_merge)
require(package)
knitr::opts_chunk$set(echo = TRUE)
breweries <- read.csv("https://raw.githubusercontent.com/tikisen/6306-case-study-1/master/Breweries.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE, header = TRUE)
beers <- read.csv("https://raw.githubusercontent.com/tikisen/6306-case-study-1/master/Beers.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE, header = TRUE)
names(breweries)[2]<-paste("Brewery_Name")
names(beers)[1]<-paste("Beer_Name")
summary(beer_merge)
str(beer_merge)
knitr::opts_chunk$set(echo = TRUE)
colSums(is.na(beers2))
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## INTRODUCTION
This is Case Study on Beers and Breweries. There are two datasets in this study: Beers and Breweries. The Beers dataset contains a list of 2410 US craft beers and Breweries dataset contains 558 US breweries. In this study the following questions are answered:
1) The number of breweries are present in each state
2) New data set is presented called beers_n_breweries. This new dataset is the merging of dataset Beers and Breweries.
3) The number of NA's in each column
4) Computing the median alcohol content and international bitterness unit for each state.
5) State that has the maximum alcoholic (ABV) beer. State that has the most bitter (IBU) beer.
6) Summary statistics for the ABV variable
7) To report if there is an apparent relationship between the bitterness of the beer and its alcoholic content
## Reading the csv files
```{r read_csv}
breweries <- read.csv("https://raw.githubusercontent.com/tikisen/6306-case-study-1/master/Breweries.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE, header = TRUE)
beers <- read.csv("https://raw.githubusercontent.com/tikisen/6306-case-study-1/master/Beers.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE, header = TRUE)
```
## Question 1: The number of breweries present in each state
```{r breweries_state}
library(plyr)
breweries_state <- count(breweries$State)
colnames(breweries_state) <- c("State", "Number of Breweries")
breweries_state
```
## Question 2: Merging of Datasets
New data set is presented called beers_n_breweries. This new dataset is the merging of dataset Beers and Breweries.
```{r merging}
colnames(beers)[5] <- "Brew_ID"
beers2 <- merge.data.frame(beers, breweries, by = "Brew_ID")
colnames(beers2)[2] <- "Beers Name"
colnames(beers2)[8] <- "Breweries Name"
#Print the first 6 observation
head(beers2,6)
#Print the last 6 observation
tail(beers2,6)
```
```{r merging}
beers2 <- merge.data.frame(beers, breweries, by = "Brew_ID")
colnames(beers2)[2] <- "Beers Name"
#Print the first 6 observation
head(beers2,6)
colnames(beers)[5] <- "Brew_ID"
breweries <- read.csv("https://raw.githubusercontent.com/tikisen/6306-case-study-1/master/Breweries.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE, header = TRUE)
beers <- read.csv("https://raw.githubusercontent.com/tikisen/6306-case-study-1/master/Beers.csv", quote = "", row.names = NULL, stringsAsFactors = FALSE, header = TRUE)
View(beers)
colnames(beers)[5] <- "Brew_ID"
beers2 <- merge.data.frame(beers, breweries, by = "Brew_ID")
View(beers2)
colnames(beers2)[2] <- "Beers Name"
colnames(beers2)[8] <- "Breweries Name"
#Print the first 6 observation
head(beers2,6)
#Print the last 6 observation
tail(beers2,6)
colSums(is.na(beers2))
abv<-na.omit(beers2$ABV)
ibu<-na.omit(beers2$IBU)
median(abv)
median(beer_merge$ABV, na.rm = TRUE)
median(beer_merge$IBU, na.rm = TRUE)
median(ibu)
hist(abv)
barplot(abv,
space = .25,
xlab = "States",
ylab = "Alcohol by Volume",
main = "Median ABV by State",
names.arg = median_ABV$State,
las=2)
median(abv)
barplot(abv,
space = .25,
xlab = "States",
ylab = "Alcohol by Volume",
main = "Median ABV by State",
names.arg = median_ABV$State,
las=2)
barplot(median_ABV$ABV,
space = .25,
xlab = "States",
ylab = "Alcohol by Volume",
main = "Median ABV by State",
names.arg = median_ABV$State,
las=2)
median_ABV <- aggregate(ABV~State, beer_merge, FUN = median)
barplot(median_ABV$ABV,
space = .25,
xlab = "States",
ylab = "Alcohol by Volume",
main = "Median ABV by State",
names.arg = median_ABV$State,
las=2)
median_IBU <- aggregate(IBU~State, beer_merge, FUN = median)
barplot(median_IBU$IBU,
space = .25,
xlab = "States",
ylab = "Bitterness",
main = "Median IBU by State",
names.arg = median_IBU$State,
las=2)
### This code will look in the merged file to determine which state has the maximum alcoholic (ABV) beer and which state has the most bitter (IBU) beer.
```{r maximum values}
beer2$State[which.max(beer2$ABV)]
beer2$State[which.max(beer2$IBU)]
```
The state with the beer with the highest alcohol by volume is Colorado. The state with the beer with the most bitter beer is Oregon.
###6. Here is some code to produce some summary statistics for the ABV of the beers.
```{r ABV summary}
summary(beer2$ABV)
```
The lowest ABV is 0.1%, the highest is 12.8%. The average is 5.98% and the middle value is 5.6%. The alcohol content is unreported for 62 beers.
### This code will look in the merged file to determine which state has the maximum alcoholic (ABV) beer and which state has the most bitter (IBU) beer.
```{r maximum values}
beers2$State[which.max(beers2$ABV)]
beers2$State[which.max(beers2$IBU)]
```
The state with the beer with the highest alcohol by volume is Colorado. The state with the beer with the most bitter beer is Oregon.
###6. Here is some code to produce some summary statistics for the ABV of the beers.
```{r ABV summary}
summary(beers2$ABV)
```
The lowest ABV is 0.1%, the highest is 12.8%. The average is 5.98% and the middle value is 5.6%. The alcohol content is unreported for 62 beers.
View(beers2)
beers2$State[which.max(beers2$ABV)]
beers2$State[which.max(beers2$IBU)]
summary(beers2$ABV)
regline <- lm(beers2$ABV~beers2$IBU,data=beers2)
summary(regline)
with(beers2,plot(beers2$IBU, beers2$ABV))
abline(regline)
regline <- lm(beers2$ABV~beers2$IBU,data=beers2)
summary(regline)
with(beers2,plot(beers2$IBU, beers2$ABV))
abline(regline, col="red")
with(beers2,plot(beers2$IBU, beers2$ABV,xlab="IBU",ylab="ABV",main="IBU vs. ABV",col="gray"))
abline(regline,col="red")
with(beers2,plot(beers2$IBU, beers2$ABV,xlab="IBU",ylab="ABV",main="IBU vs. ABV",col="darkgreen"))
summary(beers2$ABV)
barplot(median_IBU$IBU,
space = .50,
xlab = "States",
ylab = "Bitterness",
main = "Median IBU by State",
names.arg = median_IBU$State,
las=2)
View(beers2)
View(breweries)
abv<-na.omit(beers2$ABV)
ibu<-na.omit(beers2$IBU)
median(abv)
median(ibu)
median_ABV <- aggregate(ABV~State, beers2, FUN = median)
barplot(median_ABV$ABV,
space = .25,
xlab = "States",
ylab = "Alcohol by Volume",
main = "Median ABV by State",
names.arg = median_ABV$State,
las=2, col = "darkgreen")
median_IBU <- aggregate(IBU~State, beers2, FUN = median)
barplot(median_IBU$IBU,
space = .25,
xlab = "States",
ylab = "Bitterness",
main = "Median IBU by State",
names.arg = median_IBU$State,
las=2, col = "darkgreen")
load("/Users/tq/Dropbox/Senkungu Fam/Education/SMU/Courses/MSDS 6306 Doing Data Science/Homework/Assignment 10/N-MHSS-2015-DS0001-bndl-data-r/N-MHSS-2015-DS0001-data/N-MHSS-2015-DS0001-data-r.rda")
View(mh2015_puf)
knitr::opts_chunk$set(echo = TRUE)
unique(mh2015_puf$LST)
state_abbr <- unique(mh2015_puf$LST)
state_abbr
?subset
mh2015_puf_conus <- subset(mh2015_puf, LST %in% -c("AS", "GU", "PR", "VI", "AK", "HI"))
mh2015_puf_conus <- subset(mh2015_puf, LST !(%in% c("AS", "GU", "PR", "VI", "AK", "HI"))
mh2015_puf_conus <- subset(mh2015_puf, !(LST %in% c("AS", "GU", "PR", "VI", "AK", "HI"))
mh2015_puf_conus
mh2015_puf_conus <- subset(mh2015_puf, !(LST %in% c("AS", "GU", "PR", "VI", "AK", "HI"))
3]
mh2015_puf_conus <- subset(mh2015_puf, !(LST %in% c("AS", "GU", "PR", "VI", "AK", "HI")))
unique(mh2015_puf_conus$LST)
mh2015_puf_conus <- subset(mh2015_puf, LST %not in% c("AS", "GU", "PR", "VI", "AK", "HI"))
'%ni%' <- Negate('%in%')
mh2015_puf_conus <- subset(mh2015_puf, LST %ni% c("AS", "GU", "PR", "VI", "AK", "HI"))
library(dplyr)
mh2015_puf_conus <- subset(mh2015_puf, filter (!LST %ni% c("AS", "GU", "PR", "VI", "AK", "HI")))
?filter
mh2015_puf_conus <- mh2015_puf[mh2015_puf$LST != c("AS", "GU", "PR", "VI", "AK", "HI")]
mh2015_puf_conus <- mh2015_puf[mh2015_puf$LST != c("AS", "GU", "PR", "VI", "AK", "HI"), ]
mh2015_puf_conus <- mh2015_puf[mh2015_puf$LST != "HI", ]
rm(mh2015_puf_conus)
mh2015_puf_conus <- mh2015_puf[mh2015_puf$LST != "HI", ]
mh2015_puf_conus <- mh2015_puf[mh2015_puf$LST == "HI", ]
mh2015_puf_conus <- mh2015_puf[mh2015_puf$LST == "TX", ]
rm(mh2015_puf_conus)
mh2015_puf_conus <- mh2015_puf[mh2015_puf$LST == "TX", ]
mh2015_puf_conus <- subset(mh2015_puf, filter LST %in% c("AS", "GU", "PR", "VI", "AK", "HI"))
View(mh2015_puf_conus)
mh2015_puf_conus <- subset(mh2015_puf, filter LST %in% "TX")
?subset
mh2015_puf_conus <- subset(mh2015_puf, LST %in% "TX")
mh2015_puf_conus <- subset(mh2015_puf, LST %in% "TX")
rm(mh2015_puf_conus)
mh2015_puf_conus <- subset(mh2015_puf, LST %in% "TX")
mh2015_puf_conus <- subset(mh2015_puf, LST == "TX")
mh2015_puf_conus <- subset(mh2015_puf, CASEID == 201500001)
mh2015_puf_conus <- subset(mh2015_puf, LSD %in% "TX")
mh2015_puf_conus <- subset(mh2015_puf, LSD %in% c("TX")
rm(mh2015_puf_conus)
rm(mh2015_puf_conus)
mh2015_puf_conus <- subset(mh2015_puf, LSD %in% c("TX")
5
mh2015_puf_conus <- subset(mh2015_puf, LSD %in% c("TX"))
mh2015_puf_conus <- filter(mh2015_puf, LSD == "TX")
mh2015_puf_conus <- filter(mh2015_puf, mh2015_puf$LSD == "TX")
mh2015_puf_conus <- filter(mh2015_puf, LSD == "TX")
?filter
mh2015_puf_conus <- filter(mh2015_puf, CASEID == 201500001)
mh2015_puf_conus <- subset(mh2015_puf, LST %in% c("TX"))
mh2015_puf_conus <- filter(mh2015_puf, LST == "TX")
mh2015_puf_conus <- filter(mh2015_puf, LST == "TX")
rm(mh2015_puf_conus)
mh2015_puf_conus <- filter(mh2015_puf, LST == "TX")
mh2015_puf_conus <- filter(mh2015_puf, LST == "AL")
mh2015_puf_conus <- filter(mh2015_puf, LST != "AL")
head(mh2015_puf)
mh2015_puf_conus <- subset(mh2015_puf, LST %in% c("AL"))
subset(mh2015_puf, LST %in% c("AL")
subset
subset(mh2015_puf, LST %in% c("AL", "TX"))
mh2015_puf_conus <- subset(mh2015_puf, CASEID %in% c(201500001, 201500002))
View(mh2015_puf_conus)
mh2015_puf_conus <- subset(mh2015_puf, !(CASEID %in% c(201500001, 201500002)))
#'%ni%' <- Negate('%in%')
mh2015_puf_conus <- subset(mh2015_puf, filter LST %in% c("AS", "GU", "PR", "VI", "AK", "HI"))
#'%ni%' <- Negate('%in%')
mh2015_puf_conus <- subset(mh2015_puf, LST %in% c("AS", "GU", "PR", "VI", "AK", "HI"))
rm(mh2015_puf_conus)
mh2015_puf_conus <- subset(mh2015_puf, LST %in% c("AL"))
mh2015_puf_conus <- subset(mh2015_puf, TREATMT %in% c("Yes"))
#'%ni%' <- Negate('%in%')
mh2015_puf_conus <- subset(mh2015_puf, LST %in% c("AS", "GU", "PR", "VI", "AK", "HI"))
mh2015_puf_conus <- subset(mh2015_puf, PUBLICAGENCY %in% c("Logical Skip"))
mh2015_puf_conus <- subset(mh2015_puf, PUBLICAGENCY %in% c("Logical Skip", "State mental health authority (SMHA)"))
#'%ni%' <- Negate('%in%')
mh2015_puf_conus <- subset(mh2015_puf, LST %in% c("AS", "GU", "PR", "VI", "AK", "HI"))
#'%ni%' <- Negate('%in%')
mh2015_puf_conus <- subset(mh2015_puf, LST %in% c("TX"))
mh2015_puf_conus <- subset(mh2015_puf, PUBLICAGENCY %in% c("Logical Skip", "State mental health authority (SMHA)"))
mh2015_puf_conus <- subset(mh2015_puf, LST %in% c("TX"))
mh2015_puf_conus <- subset(mh2015_puf, LST %in% c("VT     "))
mh2015_puf_conus <- subset(mh2015_puf, LST %in% c("AL"))
x -> filter(mh2015_puf, LST %in% c("AL"))
x <- filter(mh2015_puf, LST %in% c("AL"))
x <- filter(mh2015_puf, LST %in% c("al"))
mh2015_puf_conus <- subset(mh2015_puf, LST == "AL")
rm(x)
mh2015_puf_conus <- mh2015_puf[mh2015_puf$LST %in% c("AL")]
mh2015_puf_conus <- mh2015_puf[mh2015_puf$LST == "AL"]
class(mh2015_puf$LST)
as.character(mh2015_puf$LST)
class(mh2015_puf$LST)
mh2015_puf <- as.character(mh2015_puf$LST)
class(mh2015_puf$LST)
class(mh2015_puf$LST)
load("/Users/tq/Dropbox/Senkungu Fam/Education/SMU/Courses/MSDS 6306 Doing Data Science/Homework/Assignment 10/N-MHSS-2015-DS0001-bndl-data-r/N-MHSS-2015-DS0001-data/N-MHSS-2015-DS0001-data-r.rda")
mh2015_puf$LST <- as.character(mh2015_puf$LST)
class(mh2015_puf$LST)
mh2015_puf_conus <- mh2015_puf[mh2015_puf$LST == "AL"]
mh2015_puf_conus <- subset(mh2015_puf, LST %in% c("AL"))
class(mh2015_puf$PUBLICAGENCY)
mh2015_puf$LST <- as.factor(mh2015_puf$LST)
class(mh2015_puf$PUBLICAGENCY)
mh2015_puf_conus <- mh2015_puf[mh2015_puf$LST == "AL"]
mh2015_puf_conus <- subset(mh2015_puf, LST %in% c("AL"))
summary(mh2015_puf)
mh2015_puf_conus <- mh2015_puf[mh2015_puf$TREATGRPTHRPY == "Missing"]
mh2015_puf_conus <- mh2015_puf[mh2015_puf$TREATGRPTHRPY == "Missing", ]
mh2015_puf_conus <- mh2015_puf[mh2015_puf$LST == "AL", ]
mh2015_puf_conus <- mh2015_puf[mh2015_puf$LST == "AL", ]
mh2015_puf_conus <- subset(mh2015_puf, LST == "AL")
#mh2015_puf_conus <- subset(mh2015_puf, !(CASEID %in% c(201500001, 201500002)))
head(mh2015_puf)
mh2015_puf_conus <- subset(mh2015_puf, LST == "AL")
mh2015_puf_conus <- subset(mh2015_puf, LST %in% c("AL"))
mh2015_puf_conus <- subset(mh2015_puf, PUBLICAGENCY %in% c("Logical Skip", "State mental health authority (SMHA)"))
#mh2015_puf_conus <- filter(mh2015_puf, LST == "AL")
unique(mh2015_puf_conus$LST)
fac_per_state <- length(unique(mh2015_puf$LST))
as.data.frame.matrix(fac_per_state)
?as.data.frame.matrix
as.data.frame(fac_per_state)
fac_per_state <- table(unique(mh2015_puf)$LST)[as.character(df$LST)]
fac_per_state <- table(unique(mh2015_puf)$LST)[as.character(mh2015_puf$LST)]
as.data.frame.matrix(fac_per_state)
as.data.frame(fac_per_state)
fac_per_state <- within(mh2015_puf, { count <- ave(LST, FUN=function(x) length(unique(x)))})
require(plyr)
fac_per_state <- ddply(mh2015_puf, .(LST), mutate, count = length(unique(type)))
fac_per_state <- ddply(mh2015_puf, .(LST), mutate, count = length(unique(LST)))
rm(fac_per_state)
fac_per_state <- ddply(mh2015_puf, .(LST), mutate, count = length(unique(LST)))
View(fac_per_state)
rm(fac_per_state)
?aggregate
fac_per_state <- aggregate(data=mh2015_puf, LST, function(x) length(unique(x)))
fac_per_state <- aggregate(data=mh2015_puf, ~ LST, function(x) length(unique(x)))
agg <- aggregate(data=df, type ~ color, function(x) = length(unique(x)))
fac_per_state <- aggregate(data=mh2015_puf, ~ LST, function(x) length(unique(x)))
count_up <- function(x) length(unique(x))
count_up <- function(x) {
length(unique(x))
}
rm(count_up)
count_up <- function(x) {
length(unique(x))
}
agg <- aggregate(data=df, type ~ color, count_up)
fac_per_state <- aggregate(count_up, data=mh2015_puf, ~ LST)
fac_per_state <- aggregate(FUN = count_up, data=mh2015_puf, ~ LST)
fac_per_state <- aggregate(FUN = count_up, data=mh2015_puf, LST)
fac_per_state <- aggregate(FUN = count_up, data=mh2015_puf, . ~ LST)
View(fac_per_state)
fac_per_state_conus <- subset(fac_per_state, LST %in% c("AL"))
setwd("~/Git/SMU/DS 6306/Case Study 2/MSDS6306_CaseStudy2")
traffic_delay <- read.csv("traffic_delays_2014_2016.csv")
traffic_volumes <- read.csv("traffic_volumes_2007_2016.csv")
merge(traffic_delay, traffic_volumes by = Route.Number)
merge(traffic_delay, traffic_volumes, by = Route.Number)
merge(traffic_delay, traffic_volumes, by = "Route.Number")
merged_data <- merge(traffic_delay, traffic_volumes, by = "Route.Number")
